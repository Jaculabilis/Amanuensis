{% extends "lexicon.jinja" %}
{% block title %}Edit | {{ lexicon_title }}{% endblock %}

{% macro settings_page_link(page, text) -%}
<a{% if page_name != page %} href="{{ url_for('lexicon.settings.' + page, lexicon_name=lexicon_name) }}"{% endif %}>{{ text }}</a>
{%- endmacro %}

{% macro flag_setting(field) %}
{{ field() }}
{{ field.label }}<br>
{% endmacro %}

{% macro number_setting(field) %}
{{ field(autocomplete="off", class_="smallnumber") }}
{{ field.label }}<br>
{% for error in field.errors %}
<span style="color: #ff0000">{{ error }}</span><br>
{% endfor %}
{% endmacro %}

{% block main %}
<section>
{% if current_membership.is_editor %}
<ul class="unordered-tabs">
    <li>{{ settings_page_link("player", "Player Settings") }}</li>
    <li>{{ settings_page_link("setup", "Game Setup") }}</li>
    <li>{{ settings_page_link("index", "Article Indices") }}</li>
    <li>{{ settings_page_link("assign", "Index Assignments") }}</li>
    <li>{{ settings_page_link("publish", "Turn Publishing") }}</li>
    <li>{{ settings_page_link("article", "Article Requirements") }}</li>
</ul>
{% endif %}

{% if page_name == "player" %}
    <h3>Player Settings</h3>
    <p>These settings are specific to you as a player in this lexicon.</p>
    <form action="" method="post" novalidate>
        {{ form.hidden_tag() }}
        <p>
            {% if current_membership.is_editor %}{{ flag_setting(form.notify_ready) }}{% endif %}
            {{ flag_setting(form.notify_reject) }}
            {{ flag_setting(form.notify_approve) }}
        </p>
        <p>{{ form.submit() }}</p>
    </form>

    {% for message in get_flashed_messages() %}
    <span style="color:#ff0000">{{ message }}</span><br>
    {% endfor %}
{% endif %}

{% if page_name == "setup" %}
    <h3>Game Setup</h3>
    <form action="" method="post" novalidate>
        {{ form.hidden_tag() }}
        <p>
            {{ form.title.label }}:<br>
            {{ form.title(autocomplete="off", placeholder="Lexicon " + lexicon_name, class_="fullwidth") }}<br>
        </p>
        <p>
            {{ form.prompt.label }}: {{ form.prompt(class_="fullwidth") }}
            {% for error in form.prompt.errors %}
            <span style="color: #ff0000">{{ error }}</span><br>
            {% endfor %}
        </p>
        <p>
            {{ flag_setting(form.public) }}
            {{ flag_setting(form.joinable) }}
            {{ form.has_password() }}
            {{ form.has_password.label }}:<br>
            {{ form.password(autocomplete="off") }}
        </p>
        <p>
            {{ number_setting(form.turn_count) }}
        </p>
        <p>
            {{ number_setting(form.player_limit) }}
        </p>
        <p>
            {{ number_setting(form.character_limit) }}
        </p>
        <p>{{ form.submit() }}</p>
    </form>
    {% for message in get_flashed_messages() %}
    <span style="color:#ff0000">{{ message }}</span><br>
    {% endfor %}
{% endif %}

{% if page_name == "index" %}
    <h3>Article Indexes</h3>
    <details class="setting-help">
        <summary>Index definition help</summary>
        <p>An index is a rule that matches the title of a lexicon article based on its <em>index type</em> and <em>pattern</em>. A <em>char</em> index matches a title if the first letter of the title (excluding "A", "An", and "The") is one of the letters in the pattern. A <em>range</em> index has a pattern denoting a range of letters, such as "A-F", and matches a title if the first letter of the title is in the range. A <em>prefix</em> index matches any title that begins with the pattern. An <em>etc</em> index always matches a title.</p>
        <p>When a title is to be sorted under an index, indices are checked in order, sorted first by descending order of <em>logical priority</em>, and then by alphabetical order of index pattern. The title is sorted under the first index that matches it.</p>
        <p>On the contents page, indices and the articles under them are displayed sorted instead by <em>display order</em> and then alphabetically by pattern.</p>
        <p>The <em>capacity</em> of an index is the number of articles that may exist under that index. If an index is at capacity, no new articles may be written or created via phantom citation in that index.</p>
        <p>To add an index, fill in the type and pattern in the blank row and save your changes. To remove an index, set the type to blank. Note: If you change the type or pattern of an index, all index assignments will be reset. Avoid changing index definitions during gameplay.</p>
    </details>
    <form action="" method="post" novalidate>
        {{ form.hidden_tag() }}
        <table id="index-definition-table">
            <tr>
                <th>Type</th>
                <th>Pattern</th>
                <th>Disp Or</th>
                <th>Log Or</th>
                <th>Cap</th>
            </tr>
            {% for index_form in form.indices %}
            <tr>
                <td>{{ index_form.index_type() }}</td>
                <td>{{ index_form.pattern() }}</td>
                <td>{{ index_form.logical_order() }}</td>
                <td>{{ index_form.display_order() }}</td>
                <td>{{ index_form.capacity() }}</td>
            </tr>
            {% for field in index_form %}
            {% for error in field.errors %}
            <tr>
                <td colspan="5"><span style="color: #ff0000">{{ error }}</span></td>
            </tr>
            {% endfor %}
            {% endfor %}
            {% endfor %}
        </table>
        <p>{{ form.submit() }}</p>
    </form>
    {% for message in get_flashed_messages() %}
    <span style="color:#ff0000">{{ message }}</span><br>
    {% endfor %}
{% endif %}

{% if page_name == "assign" %}
    <h3>Index Assignments</h3>
    <details class="setting-help">
        <summary>Index assignment help</summary>
        <p>An index assignment is a rule that requires a player to write an article under certain indices for a particular turn. If more than one rule applies to a player, any index satisfying one of those rules is permitted. If no rule applies to a player, any index is permitted.</p>
    </details>
    <form action="" method="post" novalidate>
        {{ form.hidden_tag() }}
        <table id="index-definition-table2">
            <tr>
                <th>Turn</th>
                <th>Index</th>
                <th>Character</th>
            </tr>
            {% for rule_form in form.rules %}
            <tr>
                <td>{{ rule_form.turn() }}</td>
                <td>{{ rule_form.index() }}</td>
                <td>{{ rule_form.character() }}</td>
            </tr>
            {% for field in index_form %}
            {% for error in field.errors %}
            <tr>
                <td colspan="5"><span style="color: #ff0000">{{ error }}</span></td>
            </tr>
            {% endfor %}
            {% endfor %}
            {% endfor %}
        </table>
        <p>{{ form.submit() }}</p>
    </form>
    {% for message in get_flashed_messages() %}
    <span style="color:#ff0000">{{ message }}</span><br>
    {% endfor %}
{% endif %}

{% if page_name == "publish" %}
    <h3>Turn Publishing</h3>
{% endif %}

{% if page_name == "article" %}
    <h3>Article Requirements</h3>
{% endif %}
</section>
{% endblock %}
